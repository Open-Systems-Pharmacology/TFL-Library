% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atom-plots.R
\name{addRibbon}
\alias{addRibbon}
\title{addRibbon}
\usage{
addRibbon(data = NULL, x = NULL, ymin = NULL, ymax = NULL,
  dataMapping = NULL, fill = "grey", alpha = 0.9,
  plotObject = NULL)
}
\arguments{
\item{data}{data.frame containing the ribbon endpoints to be plotted.}

\item{x}{numeric value for vertical line.}

\item{ymin}{numeric value for lower horizontal limit.
A value of 0 is assumed if only \code{ymax} value is input.}

\item{ymax}{numeric value for upper horizontal limit.
A value of 0 is assumed if only \code{ymin} value is input.}

\item{dataMapping}{\code{RangeDataMapping} class or subclass
mapping x, ymin and ymax variables to the variable names of \code{data}.}

\item{fill}{character string defining the color of the ribbon.
This parameter is optional: default value is "grey".}

\item{alpha}{numerical value between 0 and 1 defining the transparency of the ribbon.
This parameter is optional: default value is 0.9.}

\item{plotObject}{\code{ggplot} graphical object to which the line layer is added
This parameter is optional: the \code{tlf} library will initialize an empty plot if the parameter is NULL or not provided}
}
\value{
A \code{ggplot} graphical object
}
\description{
Add a ribbon layer to a \code{ggplot} graphical object.
}
\examples{
# Add a horizontal ribbon to a previous plot
p <- ggplot2::ggplot()
pmin <- addRibbon(ymin = -5, plotObject = p)
pmax <- addRibbon(ymax = 5, plotObject = p)

p <- addRibbon(ymin = -5, ymax = 5, plotObject = p)

# Add a custom ribbon
time <- seq(0,30,0.01)
customRibbonData <- data.frame(x=time, ymin = cos(time), ymax = cos(time)+1)

p <- addRibbon(data=customRibbonData,
dataMapping = RangeDataMapping$new(x="x",ymin="ymin",ymax="ymax"))

# Or for simple cases a smart mapping will get directly x and y from data
p <- addRibbon(data = customRibbonData)

# Add a ribbon with custom aesthetic properties
p <- addRibbon(data = customRibbonData, fill = "#34eb89", alpha = 0.5)

}
