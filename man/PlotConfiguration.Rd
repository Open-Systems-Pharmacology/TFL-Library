% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotconfiguration.R
\name{PlotConfiguration}
\alias{PlotConfiguration}
\title{PlotConfiguration}
\description{
R6 class defining the configuration of a \code{ggplot} object
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{export}}{R6 class \code{ExportConfiguration} defining export properties}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{labels}}{\code{LabelConfiguration} object defining properties of labels}

\item{\code{legend}}{\code{LegendConfiguration} object defining properties of legend}

\item{\code{xAxis}}{\code{XAxisConfiguration} object defining properties of x-axis}

\item{\code{yAxis}}{\code{YAxisConfiguration} object defining properties of x-axis}

\item{\code{background}}{\code{BackgroundConfiguration} object defining properties of x-axis}

\item{\code{lines}}{\code{ThemeAestheticSelections} defining properties of lines}

\item{\code{ribbons}}{\code{ThemeAestheticSelections} defining properties of ribbons}

\item{\code{points}}{\code{ThemeAestheticSelections} defining properties of points}

\item{\code{errorbars}}{\code{ThemeAestheticSelections} defining properties of error bars}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PlotConfiguration$new()}}
\item \href{#method-clone}{\code{PlotConfiguration$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new \code{PlotConfiguration} object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlotConfiguration$new(
  title = NULL,
  subtitle = NULL,
  xlabel = NULL,
  ylabel = NULL,
  legend = NULL,
  legendTitle = NULL,
  legendPosition = NULL,
  xAxis = NULL,
  xScale = NULL,
  xLimits = NULL,
  yAxis = NULL,
  yScale = NULL,
  yLimits = NULL,
  background = NULL,
  plotArea = NULL,
  panelArea = NULL,
  xGrid = NULL,
  yGrid = NULL,
  watermark = NULL,
  export = NULL,
  format = NULL,
  width = NULL,
  height = NULL,
  units = NULL,
  data = NULL,
  metaData = NULL,
  dataMapping = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{character or \code{Label} object defining plot title}

\item{\code{subtitle}}{character or \code{Label} object defining plot subtitle}

\item{\code{xlabel}}{character or \code{Label} object defining plot xlabel}

\item{\code{ylabel}}{character or \code{Label} object defining plot ylabel}

\item{\code{legend}}{\code{LegendConfiguration} object defining legend properties}

\item{\code{legendTitle}}{character defining legend title}

\item{\code{legendPosition}}{character defining legend position.
Use Enum \code{LegendPositions} to get a list of available to legend positions.}

\item{\code{xAxis}}{\code{XAxisConfiguration} object defining x-axis properties}

\item{\code{xScale}}{name of X-axis scale. Use enum \code{Scaling} to access predefined scales.}

\item{\code{xLimits}}{numeric vector of length 2 defining x-axis limits}

\item{\code{yAxis}}{\code{YAxisConfiguration} object defining y-axis properties}

\item{\code{yScale}}{name of y-axis scale. Use enum \code{Scaling} to access predefined scales.}

\item{\code{yLimits}}{numeric vector of length 2 defining y-axis limits}

\item{\code{background}}{\code{BackgroundConfiguration} object defining background properties}

\item{\code{plotArea}}{\code{BackgroundElement} object defining properties of plot area}

\item{\code{panelArea}}{\code{BackgroundElement} object defining properties of panel area}

\item{\code{xGrid}}{\code{LineElement} object defining properties of x-grid background}

\item{\code{yGrid}}{\code{LineElement} object defining properties of y-grid background}

\item{\code{watermark}}{\code{Label} object defining watermark}

\item{\code{export}}{R6 class \code{SaveConfiguration} defining saving properties}

\item{\code{format}}{character defining the format of the file to be saved}

\item{\code{width}}{numeric values defining the width in \code{units} of the plot dimensions after saving}

\item{\code{height}}{numeric values defining the height in \code{units} of the plot dimensions after saving}

\item{\code{units}}{character defining the unit of the saving dimension}

\item{\code{data}}{data.frame used by \code{smartMapping}}

\item{\code{metaData}}{list of information on \code{data}}

\item{\code{dataMapping}}{R6 class or subclass \code{XYDataMapping}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{PlotConfiguration} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PlotConfiguration$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
